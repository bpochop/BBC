@page "/menu"
@inject NavigationManager UriHelper
@inject HttpClient Http
@using BBC.Shared
@using drinkMenu = BBC.Shared.Models

<body class = "body-index" >


        <div class = "header">
        
            @*<p class="h1class">BBC</p>*@
            
        </div>
        <div class="menu-preview-test">
        
          <button class="menu-button" data-toggle="collapse"  @onclick="@(() => { IsCocktailVisible = !IsCocktailVisible; })">
             <div style="display: flex">
                            <p class="menu-text-cocktails">Cocktails</p>
                            <img class = "dropdown-arrow" src="images/dropdownarrow.png" />
                    </div>
          </button>
        

            <div class="collapse @(IsCocktailVisible ? "show" : "")">
              <div class="">
                @foreach(var drink in cocktails)
                {
                    <div class="drink-container " >

                        <a class = "menu-button" href="/confirm/cocktail/@drink.Name">
                            <div class = "drink-name">
                                <p class="drink-text">@drink.Name</p>
                            </div>
                            <img class="drink-picture" src="images/logo.png">
                        </a>

                    </div>
                }
              </div>
            </div>
    </div>


    <div class="menu-preview-test">
        
          <button class="menu-button" data-toggle="collapse"  @onclick="@(() => { IsShotsVisible = !IsShotsVisible; })">
             <div style="display: flex">
                            <p class="menu-text-shots">Shots</p>
                            <img class = "dropdown-arrow" src="images/dropdownarrow.png" />
                    </div>
          </button>
        

            <div class="collapse @(IsShotsVisible ? "show" : "")">
              <div class="">
                    @foreach(var drink in shots)
                    {
                        <div class="drink-container " >

                            <a class="menu-button" href="/confirm/shot/@drink.Name">
                                <div class = "drink-name">
                                    <p class="drink-text">@drink.Name</p>
                                </div>
                                <img class="drink-picture" src="images/shot.png">
                            </a>

                        </div>
                    }
              </div>
            </div>
    </div>


        <div class="menu-preview-test">
        
          <button class="menu-button" data-toggle="collapse"  @onclick="@(() => { IsFullMenuVisible = !IsFullMenuVisible; })">
             <div style="display: flex">
                            <p class="menu-text-fullmenu">Full Menu</p>
                            <img class = "dropdown-arrow" src="images/dropdownarrow.png" />
                    </div>
          </button>
        

            <div class="collapse @(IsFullMenuVisible ? "show" : "")">
              <div class="">
                   @foreach(var drink in full_menu)
                    {
                        <div class="drink-container " >

                                @if(drink.TypeId == "C"){
                                <a class = "menu-button" href="/confirm/cocktail/@drink.Name">
                                    <div class = "drink-name">
                                        <p class="drink-text">@drink.Name</p>
                                    </div>
                           
                                    <img class="drink-picture" src="images/logo.png">
                                    </a>
                                }
                                else{
                                        <a class = "menu-button" href="/confirm/shot/@drink.Name">
                                        <div class = "drink-name">
                                            <p class="drink-text">@drink.Name</p>
                                        </div>
                                    <img class="drink-picture" src="images/shot.png">
                                        </a>
                                }

                        </div>
                    }
            </div>
            </div>
    </div>


      
 
          <div class="menu-link">
            <NavLink class="nav-link" href="New-Drink">
              
                    <p class="menu-text">New Drink</p>
                
               
            </NavLink>
        </div>

       



</body>


@code{


    public int cocktailCount { get; set; } = 0;

    protected bool IsCocktailVisible { get; set; }

    protected bool IsShotsVisible { get; set; }

    protected bool IsFullMenuVisible { get; set; }
    protected bool IsVisible { get; set; }







    public List<drinkMenu.Menu> shots { get; set; } = new List<drinkMenu.Menu>();


    public List<drinkMenu.Menu> cocktails { get; set; } = new List<drinkMenu.Menu>();
    public List<drinkMenu.Menu> full_menu { get; set; } = new List<drinkMenu.Menu>();

    protected override async Task OnInitializedAsync()
    {

        string type = "shot";
        HttpResponseMessage response = await Http.GetAsync($"Drinks/{type}");

        if (response.IsSuccessStatusCode)
        {
            shots = await response.Content.ReadFromJsonAsync<List<drinkMenu.Menu>>();
        }
        else
        {
            shots = null;
        }


        type = "cocktail";
        HttpResponseMessage response1 = await Http.GetAsync($"Drinks/{type}");

        if (response.IsSuccessStatusCode)
        {
            cocktails = await response1.Content.ReadFromJsonAsync<List<drinkMenu.Menu>>();
        }
        else
        {
            cocktails = null;
        }


        type = "full_menu";
        HttpResponseMessage response2 = await Http.GetAsync($"Drinks/{type}");

        if (response.IsSuccessStatusCode)
        {
            full_menu = await response2.Content.ReadFromJsonAsync<List<drinkMenu.Menu>>();
        }
        else
        {
            full_menu = null;
        }
    }

}